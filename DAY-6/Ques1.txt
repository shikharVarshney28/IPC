class Solution {
    boolean possible(char[][] arr, int i, int j, boolean vis[][], int idx, String word) {
        if (idx == word.length())
            return true;
        if (i >= arr.length || j >= arr[0].length || i < 0 || j < 0 || vis[i][j] || arr[i][j] != word.charAt(idx))
            return false;
        vis[i][j] = true;
        boolean f = possible(arr, i + 1, j, vis, idx + 1, word) || possible(arr, i - 1, j, vis, idx + 1, word)
                || possible(arr, i, j + 1, vis, idx + 1, word) || possible(arr, i, j - 1, vis, idx + 1, word);
        vis[i][j] = false;
        return f;
    }

    public boolean exist(char[][] board, String word) {
        List<int[]> a = new ArrayList<>();
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                if (board[i][j] == word.charAt(0)) {
                    a.add(new int[] { i, j });
                }
            }
        }
        for (int i[] : a) {
            if (possible(board, i[0], i[1], new boolean[board.length][board[0].length], 0, word)) {
                return true;
            }
        }
        return false;
    }
}